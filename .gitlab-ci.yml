image: node:16.13.2-alpine

stages:
  - test
  - analyze
  - build
  - deploy

cache:
  paths:
    - node_modules/
    - .yarn

coverage:
  stage: test
  script:
    - npm i -g lerna
    - lerna bootstrap
    - lerna run build
    - yarn coverage
  allow_failure: true
  only:
    - main
  tags:
    - nginx-proxy-sonar
  artifacts:
    paths:
      - $CI_PROJECT_DIR/coverage/

analyze:sonar:
  stage: analyze
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: 0
  image:
    name: sonarsource/sonar-scanner-cli:4.7
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    # - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_USER -Dsonar.password=$SONAR_PASSWORD
    - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.sources=packages -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_USER -Dsonar.password=$SONAR_PASSWORD -Dsonar.exclusions=**/express/routers/**,**/rabbit-rpc/routers/**,**/mocks/**,**/*.stories.ts,**/*.stories.js -Dsonar.cpd.exclusions=**/router/**,**/utils/menu.ts -Dsonar.test.inclusions=**/*.test.js,**/*.test.ts,**/*.spec.js,**/*.spec.ts -Dsonar.javascript.coveragePlugin=lcov -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
  allow_failure: true
  only:
    - main
  tags:
    - nginx-proxy-sonar

.release:
  stage: release
  only:
    - main
  variables:
    GITLAB_AUTH_TOKEN: $CI_JOB_TOKEN
  tags:
    - gits-dev-mars
  when: manual

# release:patch:
#   extends: .release
#   script:
#     - npm run release -- --release-as patch
#     - git push --follow-tags origin main && npm publish

# release:minor:
#   extends: .release
#   script:
#     - npm run release -- --release-as minor
#     - git push --follow-tags origin main && npm publish

build-storybook:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - npm i -g lerna
    - lerna bootstrap
    - lerna run build
    - yarn build-storybook
  artifacts:
    paths:
      - storybook-static
    expire_in: 1 hour
  tags:
    - nginx-proxy-sonar

deploy-storybook:
  stage: deploy
  script:
    - npm install -g firebase-tools
    - firebase use gits-ui --token $FIREBASE_TOKEN
    - firebase deploy --only hosting:ui -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - nginx-proxy-sonar
